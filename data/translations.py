import json
import os

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
project_root = os.path.dirname(os.path.abspath(__file__))

# –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª—É ru.json
path_to_ru_json = os.path.join(project_root, 'ru.json')
path_to_uzb_json = os.path.join(project_root, 'uzb.json')
# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—Å—Ç–∞
with open(path_to_ru_json, 'r', encoding='utf-8') as file:
    ru_texts = json.load(file)

with open(path_to_uzb_json, 'r', encoding='utf-8') as file:
    uzb_texts = json.load(file)

translations = {
    'uzb': {}
}
# –æ–±—ä–µ–¥–∏–Ω—è–µ–º —Å–ª–æ–≤–∞
for key in ru_texts:
    translations['uzb'][ru_texts[key]] = uzb_texts[key]


def _(text, lang):
    """–§—É–Ω–∫—Ü–∏—è, –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–∞–∫–æ–π —Ç–µ–∫—Å—Ç –Ω—É–∂–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å uzb –∏–ª–∏ ru"""
    if lang == 'ru':
        return text
    else:
        global translations
        try:
            return translations[lang][text]
        except Exception:
            return text


# –≤—ã–Ω–µ—Å —Å—é–¥–∞, —Ç–∞–∫ –∫–∞–∫ –±—ã–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏

user_language = {}  # –ü—Ä–∏–º–µ—Ä: {'user_id': 'ru'}

# from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
#
# def generate_markup(user_language):
#     if user_language == 'uz':
#         translations = translations_uz
#     else:  # default language
#         translations = {
#             '–í—ã–∫—É–ø': '–í—ã–∫—É–ø',
#             '–ü–æ–º–æ—â—å ‚≠êÔ∏è': '–ü–æ–º–æ—â—å ‚≠êÔ∏è',
#             # ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã
#         }
#
#     return ReplyKeyboardMarkup(
#         keyboard=[
#             [
#                 KeyboardButton(text=translations['–í—ã–∫—É–ø']),
#                 KeyboardButton(text=translations['–ü–æ–º–æ—â—å ‚≠êÔ∏è']),
#                 KeyboardButton(text=translations['–ó–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã üö´Ô∏è']),
#             ],
#             [
#                 KeyboardButton(text=translations['–ü–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å üìå']),
#             ],
#             [
#                 KeyboardButton(text=translations['–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑‚è±']),
#             ],
#         ],
#         resize_keyboard=True
#     )
